# -*- coding: utf-8 -*-
"""project_hashlib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1txZd3hmbKXpmC5lJzX8hzbE1g_ELU5AS
"""

def hello_func():
    print('Hello Shape AI')
 
hello_func()

import hashlib
 
print(hashlib.algorithms_available)

"""⬇️ A Small Creation "In A program in python to generate md5 of string data" 👇"""

import hashlib
 
print(hashlib.md5('Shape AI YouTube Channel'.encode('UTF-8')).hexdigest())

import hashlib
 
def main():
 
    text = "Hello Harsh Akshit Bro!!"
    textUtf8 = text.encode("utf-8")
 
    hash = hashlib.md5( textUtf8 )
    hexa = hash.hexdigest()
 
    print (hexa)
 
    return
 
main()

import hashlib
 
#using hexdigest()
print(hashlib.md5("Shape AI".encode('utf-8')).hexdigest())
print(hashlib.md5("4c120f421d2e4962bf7fe4d2f22c8109".encode('utf-8')).hexdigest())
 
#using digest()
print(hashlib.md5("Shape AI".encode('utf-8')).digest())
print(hashlib.md5("4c120f421d2e4962bf7fe4d2f22c8109".encode('utf-8')).digest())

"""⬇️ A Small Creations In " Python Program to generate hashes of string data using 3 algorithms from hashlib with GreeksforGeeks" 👇

1) ⬇️ md5 👇
"""

import hashlib 
 
 
# function  
 
result = hashlib.md5(b'GeeksforGeeks') 
 
  
# printing the equivalent byte value. 
 
print("The byte equivalent of hash is : ", end ="") 
 
print(result.digest())

"""2) ⬇️ sha256 👇"""

import hashlib 
 
  
# initializing string 
 
str = "GeeksforGeeks"
 
  
# encoding GeeksforGeeks using encode() 
# then sending to SHA256() 
 
result = hashlib.sha256(str.encode()) 
 
  
# printing the equivalent hexadecimal value. 
 
print("The hexadecimal equivalent of SHA256 is : ") 
 
print(result.hexdigest()) 
 
  
 
print ("\r")

"""3)⬇️ blake2s 👇"""

import hashlib 
 
 
gfg = hashlib.blake2s() 
gfg.update(b'GeeksForGeeks') 
 
 
print(gfg.digest())